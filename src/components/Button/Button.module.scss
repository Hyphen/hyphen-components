@import '@hyphen/hyphen-design-tokens/build/scss/_variables';

:root {
  --button-primary-background-color: var(--color-base-primary-500);
  --button-primary-background-color-hover: var(--color-base-primary-400);
  --button-primary-background-color-active: var(--color-base-primary-700);
  --button-primary-font-color: var(--color-base-white-500);
  --button-primary-font-color-hover: var(--color-base-white-500);

  --button-secondary-background-color: var(--color-base-white-500);
  --button-secondary-background-color-hover: var(--color-base-primary-50);
  --button-secondary-background-color-active: var(--color-base-grey-200);
  --button-secondary-border-color: var(--color-base-grey-300);
  --button-secondary-border-color-hover: var(--color-base-grey-300);
  --button-secondary-font-color: var(--color-base-grey-700);
  --button-secondary-font-color-hover: var(--color-base-grey-700);

  --button-tertiary-background-color: transparent;
  --button-tertiary-background-color-hover: var(--color-base-primary-50);
  --button-tertiary-background-color-active: var(--color-base-primary-100);
  --button-tertiary-font-color: var(--color-base-primary-500);
  --button-tertiary-font-color-hover: var(--color-base-primary-500);

  --button-danger-background-color: var(--color-base-red-600);
  --button-danger-background-color-hover: var(--color-base-red-500);
  --button-danger-background-color-active: var(--color-base-red-700);
  --button-danger-font-color: var(--color-base-white-500);
  --button-danger-font-color-hover: var(--color-base-white-500);

  --button-box-shadow-focus: 0 0 0 4px var(--color-base-primary-200);
  --button-neutral-box-shadow-focus: 0 0 0 4px var(--color-base-grey-200);
  --button-danger-box-shadow-focus: 0 0 0 4px var(--color-base-danger-200);
}

@mixin button-dark-mode {
  --button-primary-background-color: var(--color-base-primary-500);
  --button-primary-background-color-hover: var(--color-base-primary-600);
  --button-primary-background-color-active: var(--color-base-primary-700);
  --button-primary-font-color: var(--color-base-white-500);
  --button-primary-font-color-hover: var(--color-base-white-500);

  --button-secondary-background-color: var(--color-base-white-500);
  --button-secondary-background-color-hover: var(--color-base-grey-100);
  --button-secondary-background-color-active: var(--color-base-grey-200);
  --button-secondary-border-color: var(--color-base-grey-200);
  --button-secondary-border-color-hover: var(--color-base-grey-100);
  --button-secondary-font-color: var(--color-base-grey-700);
  --button-secondary-font-color-hover: var(--color-base-grey-700);

  --button-tertiary-background-color: transparent;
  --button-tertiary-background-color-hover: var(--color-base-primary-50);
  --button-tertiary-background-color-active: var(--color-base-primary-100);
  --button-tertiary-font-color: var(--color-base-primary-500);
  --button-tertiary-font-color-hover: var(--color-base-primary-500);

  --button-danger-background-color: var(--color-base-red-500);
  --button-danger-background-color-hover: var(--color-base-red-600);
  --button-danger-background-color-active: var(--color-base-red-700);
  --button-danger-font-color: var(--color-base-white-500);
  --button-danger-font-color-hover: var(--color-base-white-500);
}

:root[data-theme='dark'],
div[data-theme='dark'] {
  @include button-dark-mode;
}

/* @media (prefers-color-scheme: dark) {
//   :root {
//     @include button-dark-mode;
//   }
// }
*/

@mixin size-sm {
  border-radius: var(
    --button-size-sm-border-radius,
    var(--INTERNAL_form-control-size-sm-border-radius)
  );
  padding: var(
      --button-size-sm-padding-vertical,
      var(--INTERNAL_form-control-size-sm-padding)
    )
    var(--button-size-sm-padding-horizontal, var(--size-spacing-md));
  min-height: 32px;
  font-size: var(
    --button-size-sm-font-size,
    var(--INTERNAL_form-control-size-sm-font-size)
  );
  letter-spacing: 0.2px;
  height: 32px;
}

%size-sm {
  @include size-sm;
}

.size-sm {
  @extend %size-sm;
}

@mixin size-md {
  border-radius: var(
    --button-size-md-border-radius,
    var(--INTERNAL_form-control-size-md-border-radius)
  );
  padding: calc(
      var(
          --button-size-md-padding-vertical,
          var(--INTERNAL_form-control-size-md-padding)
        ) - 1px
    )
    calc(
      (var(--button-size-md-padding-horizontal, var(--size-spacing-xl))) - 1px
    );
  font-size: var(
    --button-size-md-font-size,
    var(--INTERNAL_form-control-size-md-font-size)
  );
  letter-spacing: 0.2px;
  height: 40px;
}

%size-md {
  @include size-md;
}

.size-md {
  @extend %size-md;
}

@mixin size-lg {
  border-radius: var(
    --button-size-lg-border-radius,
    var(--INTERNAL_form-control-size-lg-border-radius)
  );
  padding: var(
      --button-size-lg-padding-vertical,
      var(--INTERNAL_form-control-size-lg-padding)
    )
    var(--button-size-lg-padding-horizontal, var(--size-spacing-2xl));
  min-height: 55px;
  letter-spacing: 1px;
  font-size: var(
    --button-size-lg-font-size,
    var(--INTERNAL_form-control-size-lg-font-size)
  );
  height: 55px;
}

%size-lg {
  @include size-lg;
}

.size-lg {
  @extend %size-lg;
}

.button {
  border: 1px solid transparent;
  cursor: pointer;
  background-color: transparent;
  padding: 0;
  color: inherit;
  line-height: var(--size-line-height-input);
  font-family: var(--button-font-family, var(--asset-fonts-body));
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  transition-duration: 0.1s;
  transition-property: background-color, border, box-shadow, color;
  transition-timing-function: cubic-bezier(0.67, 0.83, 0.67);
  text-align: center;
  text-decoration: none;
  font-weight: var(--button-font-weight, var(--size-font-weight-semi-bold));

  &:hover {
    text-decoration: none;
  }

  &:disabled {
    opacity: 0.25;
    cursor: not-allowed;
  }

  &.primary {
    background-color: var(--button-primary-background-color);
    color: var(--button-primary-font-color);

    &:not(:disabled):hover {
      background-color: var(--button-primary-background-color-hover);
      color: var(--button-primary-font-color-hover);
    }

    &:not(:disabled):active {
      background-color: var(--button-primary-background-color-active);
    }

    &:focus {
      outline: 0;
      box-shadow: var(--button-box-shadow-focus);
    }

    // Show focus styles on keyboard focus.
    &:focus-visible {
      outline: 0;
      box-shadow: var(--button-box-shadow-focus);
    }

    // Hide focus styles if they are not needed, for example,
    // when an element receives focus via the mouse.
    &:focus:not(:focus-visible) {
      outline: 0;
      box-shadow: none;
    }
  }

  &.secondary {
    background-color: var(--button-secondary-background-color);
    border: 1px solid;
    border-color: var(--button-secondary-border-color);
    color: var(--button-secondary-font-color);

    &:not(:disabled):hover {
      border-color: var(--button-secondary-border-color-hover);
      background-color: var(--button-secondary-background-color-hover);
      color: var(--button-secondary-font-color-hover);
    }

    &:not(:disabled):active {
      background-color: var(--button-secondary-background-color-active);
    }

    &:focus {
      outline: 0;
      box-shadow: var(--button-box-shadow-focus);
    }

    // Show focus styles on keyboard focus.
    &:focus-visible {
      outline: 0;
      box-shadow: var(--button-box-shadow-focus);
    }

    &:focus:not(:focus-visible) {
      outline: 0;
      box-shadow: none;
    }
  }

  &.tertiary {
    background-color: var(--button-tertiary-background-color);
    color: var(--button-tertiary-font-color);

    &:not(:disabled):hover {
      background-color: var(--button-tertiary-background-color-hover);
      border-color: var(--button-tertiary-background-color-hover);
      color: var(--button-tertiary-font-color-hover);
    }

    &:not(:disabled):active {
      background-color: var(--button-tertiary-background-color-active);
      border-color: var(--button-tertiary-background-color-active);
    }

    &:focus {
      outline: 0;
      box-shadow: var(--button-box-shadow-focus);
    }

    // Show focus styles on keyboard focus.
    &:focus-visible {
      outline: 0;
      box-shadow: var(--button-box-shadow-focus);
    }

    &:focus:not(:focus-visible) {
      outline: 0;
      box-shadow: none;
    }
  }

  &.danger {
    background-color: var(--button-danger-background-color);
    color: var(--button-danger-font-color);

    &:not(:disabled):hover {
      background-color: var(--button-danger-background-color-hover);
      color: var(--button-danger-font-color-hover);
    }

    &:not(:disabled):active {
      background-color: var(--button-danger-background-color-active);
    }

    &:focus {
      outline: 0;
      box-shadow: var(--button-danger-box-shadow-focus);
    }

    &:focus-visible {
      outline: 0;
      box-shadow: var(--button-danger-box-shadow-focus);
    }

    &:focus:not(:focus-visible) {
      outline: 0;
      box-shadow: none;
    }
  }

  &.sm {
    border-radius: var(--button-size-sm-border-radius);
    padding: var(--button-size-sm-padding-vertical)
      var(--button-size-sm-padding-horizontal);
    min-height: 32px;
    font-size: var(--button-size-sm-font-size);
  }

  &.size-sm {
    @extend %size-sm;
  }

  &.size-md {
    @extend %size-md;
  }

  &.size-lg {
    @extend %size-lg;
  }

  @media (min-width: $size-breakpoint-tablet) {
    &.size-sm-tablet {
      @include size-sm;
    }

    &.size-md-tablet {
      @include size-md;
    }

    &.size-lg-tablet {
      @include size-lg;
    }
  }

  @media (min-width: $size-breakpoint-desktop) {
    &.size-sm-desktop {
      @include size-sm;
    }

    &.size-md-desktop {
      @include size-md;
    }

    &.size-lg-desktop {
      @include size-lg;
    }
  }

  @media (min-width: $size-breakpoint-hd) {
    &.size-sm-hd {
      @include size-sm;
    }

    &.size-md-hd {
      @include size-md;
    }

    &.size-lg-hd {
      @include size-lg;
    }
  }

  &.loading {
    .label {
      visibility: hidden;
    }
  }

  &.full-width {
    width: 100%;
  }
}

.spinner-wrapper {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@import '@hyphen/hyphen-design-tokens/build/scss/variables';

:root {
  --button-box-shadow-focus: 0 0 0 4px var(--color-base-primary-200);
  --button-neutral-box-shadow-focus: 0 0 0 4px var(--color-base-grey-200);
  --button-danger-box-shadow-focus: 0 0 0 4px var(--color-base-danger-200);
}

@mixin size-sm {
  border-radius: var(--INTERNAL_form-control-size-sm-border-radius);
  padding: var(--INTERNAL_form-control-size-sm-padding) var(--size-spacing-md);
  min-height: 32px;
  font-size: var(--INTERNAL_form-control-size-sm-font-size);
  letter-spacing: 0.2px;
  height: 32px;
}

%size-sm {
  @include size-sm;
}

.size-sm {
  @extend %size-sm;
}

@mixin size-md {
  border-radius: var(
    --button-size-md-border-radius,
    var(--INTERNAL_form-control-size-md-border-radius)
  );
  padding: calc(
      var(
          --button-size-md-padding-vertical,
          var(--INTERNAL_form-control-size-md-padding)
        ) - 1px
    )
    calc(
      (var(--button-size-md-padding-horizontal, var(--size-spacing-xl))) - 1px
    );
  font-size: var(
    --button-size-md-font-size,
    var(--INTERNAL_form-control-size-md-font-size)
  );
  letter-spacing: 0.2px;
  height: 40px;
}

%size-md {
  @include size-md;
}

.size-md {
  @extend %size-md;
}

@mixin size-lg {
  border-radius: var(
    --button-size-lg-border-radius,
    var(--INTERNAL_form-control-size-lg-border-radius)
  );
  gap: var(--size-spacing-lg);
  padding: var(
      --button-size-lg-padding-vertical,
      var(--INTERNAL_form-control-size-lg-padding)
    )
    var(--button-size-lg-padding-horizontal, var(--size-spacing-2xl));
  min-height: 55px;
  letter-spacing: 1px;
  font-size: var(
    --button-size-lg-font-size,
    var(--INTERNAL_form-control-size-lg-font-size)
  );
  height: 55px;
}

%size-lg {
  @include size-lg;
}

.size-lg {
  @extend %size-lg;
}

.button {
  border: 1px solid transparent;
  cursor: pointer;
  background-color: transparent;
  padding: 0;
  color: inherit;
  line-height: 1;
  font-family: var(--assets-font-family-body);
  display: inline-flex;
  gap: var(--size-spacing-sm);
  align-items: center;
  justify-content: center;
  position: relative;
  transition-duration: 0.1s;
  transition-property: background-color, border, box-shadow, color;
  transition-timing-function: cubic-bezier(0.67, 0.83, 0.67);
  text-align: center;
  text-decoration: none;
  font-weight: var(--size-font-weight-semi-bold);

  &:hover {
    text-decoration: none;
  }

  &[aria-disabled='true'],
  &:disabled {
    opacity: 0.45;
    cursor: not-allowed;
  }

  &.primary {
    background-color: var(--color-background-button-primary);
    color: var(--color-font-button-primary);
    border-color: var(--color-border-button-primary);

    &:not(:disabled):hover {
      background-color: var(--color-background-button-primary-hover);
      color: var(--color-font-button-primary-hover);
      border-color: var(--color-border-button-primary-hover);
    }

    &:not(:disabled):active {
      background-color: var(--color-background-button-primary-active);
      color: var(--color-font-button-primary-active);
      border-color: var(--color-border-button-primary-active);
    }

    &:focus {
      outline: 0;
      box-shadow: var(--button-box-shadow-focus);
    }

    // Show focus styles on keyboard focus.
    &:focus-visible {
      outline: 0;
      box-shadow: var(--button-box-shadow-focus);
    }

    // Hide focus styles if they are not needed, for example,
    // when an element receives focus via the mouse.
    &:focus:not(:focus-visible) {
      outline: 0;
      box-shadow: none;
    }
  }

  &.secondary {
    background-color: var(--color-background-button-secondary);
    border: 1px solid;
    border-color: var(--color-border-button-secondary);
    color: var(--color-font-button-secondary);

    &:not(:disabled):hover {
      background-color: var(--color-background-button-secondary-hover);
      border-color: var(--color-border-button-secondary-hover);
      color: var(--color-font-button-secondary-hover);
    }

    &:not(:disabled):active {
      background-color: var(--color-background-button-secondary-active);
      border-color: var(--color-border-button-secondary-active);
      color: var(--color-font-button-secondary-active);
    }

    &:focus {
      outline: 0;
      box-shadow: var(--button-box-shadow-focus);
    }

    // Show focus styles on keyboard focus.
    &:focus-visible {
      outline: 0;
      box-shadow: var(--button-box-shadow-focus);
    }

    &:focus:not(:focus-visible) {
      outline: 0;
      box-shadow: none;
    }
  }

  &.tertiary {
    background-color: var(--color-background-button-tertiary);
    color: var(--color-font-button-tertiary);

    &:not(:disabled):hover {
      background-color: var(--color-background-button-tertiary-hover);
      border-color: var(--color-border-button-tertiary-hover);
      color: var(--color-font-button-tertiary-hover);
    }

    &:not(:disabled):active {
      background-color: var(--color-background-button-tertiary-active);
      border-color: var(--color-border-button-tertiary-active);
      color: var(--color-font-button-tertiary-active);
    }

    &:focus {
      outline: 0;
      box-shadow: var(--button-box-shadow-focus);
    }

    // Show focus styles on keyboard focus.
    &:focus-visible {
      outline: 0;
      box-shadow: var(--button-box-shadow-focus);
    }

    &:focus:not(:focus-visible) {
      outline: 0;
      box-shadow: none;
    }
  }

  &.danger {
    background-color: var(--color-background-button-danger);
    color: var(--color-font-button-danger);

    &:not(:disabled):hover {
      background-color: var(--color-background-button-danger-hover);
      color: var(--color-font-button-danger-hover);
    }

    &:not(:disabled):active {
      background-color: var(--color-background-button-danger-active);
      color: var(--color-font-button-danger-active);
    }

    &:focus {
      outline: 0;
      box-shadow: var(--button-danger-box-shadow-focus);
    }

    &:focus-visible {
      outline: 0;
      box-shadow: var(--button-danger-box-shadow-focus);
    }

    &:focus:not(:focus-visible) {
      outline: 0;
      box-shadow: none;
    }
  }

  &.link {
    display: inline-flex;
    color: inherit;
    padding: 0;
    text-underline-offset: var(--size-spacing-xs);
    font-size: inherit;
    height: auto;

    &:not(:disabled):hover {
      text-decoration: underline;
    }

    &:focus {
      outline: 0;
      box-shadow: var(--button-box-shadow-focus);
    }

    // Show focus styles on keyboard focus.
    &:focus-visible {
      outline: 0;
      box-shadow: var(--button-box-shadow-focus);
    }

    &:focus:not(:focus-visible) {
      outline: 0;
      box-shadow: none;
    }
  }

  &.size-sm {
    @extend %size-sm;
  }

  &.size-md {
    @extend %size-md;
  }

  &.size-lg {
    @extend %size-lg;
  }

  @media (min-width: $size-breakpoint-tablet) {
    &.size-sm-tablet {
      @include size-sm;
    }

    &.size-md-tablet {
      @include size-md;
    }

    &.size-lg-tablet {
      @include size-lg;
    }
  }

  @media (min-width: $size-breakpoint-desktop) {
    &.size-sm-desktop {
      @include size-sm;
    }

    &.size-md-desktop {
      @include size-md;
    }

    &.size-lg-desktop {
      @include size-lg;
    }
  }

  @media (min-width: $size-breakpoint-hd) {
    &.size-sm-hd {
      @include size-sm;
    }

    &.size-md-hd {
      @include size-md;
    }

    &.size-lg-hd {
      @include size-lg;
    }
  }

  &.loading {
    .label {
      visibility: hidden;
    }
  }

  &.full-width {
    width: 100%;
  }
}

.spinner-wrapper {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@import '@hyphen/hyphen-design-tokens/build/scss/variables';

@mixin size-sm {
  border-radius: var(
    --form-control-size-sm-border-radius,
    var(--INTERNAL_form-control-size-sm-border-radius)
  );
  font-size: var(
    --form-control-size-sm-font-size,
    var(--INTERNAL_form-control-size-sm-font-size)
  );

  > input {
    padding: var(
      --form-control-size-sm-padding,
      var(--INTERNAL_form-control-size-sm-padding)
    );
    border-radius: var(
      --form-control-size-sm-border-radius,
      var(--INTERNAL_form-control-size-sm-border-radius)
    );
  }

  .prefix {
    padding: var(
      --form-control-size-sm-padding,
      var(--INTERNAL_form-control-size-sm-padding)
    );
  }

  .suffix {
    padding: var(
      --form-control-size-sm-padding,
      var(--INTERNAL_form-control-size-sm-padding)
    );
  }

  .clear-button {
    padding: var(
        --form-control-size-sm-padding,
        var(--INTERNAL_form-control-size-sm-padding)
      )
      var(
        --form-control-size-sm-padding,
        var(--INTERNAL_form-control-size-sm-padding)
      )
      var(
        --form-control-size-sm-padding,
        var(--INTERNAL_form-control-size-sm-padding)
      )
      0;
  }

  &:not(.is-clearable) {
    .suffix {
      padding: var(
        --form-control-size-sm-padding,
        var(--INTERNAL_form-control-size-sm-padding)
      );
    }
  }
}

%size-sm {
  @include size-sm;
}

.size-sm {
  @extend %size-sm;
}

@mixin size-md {
  border-radius: var(
    --form-control-size-md-border-radius,
    var(--INTERNAL_form-control-size-md-border-radius)
  );
  font-size: var(
    --form-control-size-md-font-size,
    var(--INTERNAL_form-control-size-md-font-size)
  );

  > input {
    padding: var(
      --form-control-size-md-padding,
      var(--INTERNAL_form-control-size-md-padding)
    );
    border-radius: var(
      --form-control-size-md-border-radius,
      var(--INTERNAL_form-control-size-md-border-radius)
    );
  }

  .prefix {
    padding: var(
      --form-control-size-md-padding,
      var(--INTERNAL_form-control-size-md-padding)
    );
  }

  .suffix {
    padding: var(
      --form-control-size-md-padding,
      var(--INTERNAL_form-control-size-md-padding)
    );
  }

  .clear-button {
    padding: var(
        --form-control-size-md-padding,
        var(--INTERNAL_form-control-size-md-padding)
      )
      var(
        --form-control-size-md-padding,
        var(--INTERNAL_form-control-size-md-padding)
      )
      var(
        --form-control-size-md-padding,
        var(--INTERNAL_form-control-size-md-padding)
      )
      0;
  }

  &:not(.is-clearable) {
    .suffix {
      padding: var(
        --form-control-size-md-padding,
        var(--INTERNAL_form-control-size-md-padding)
      );
    }
  }
}

%size-md {
  @include size-md;
}

.size-md {
  @extend %size-md;
}

@mixin size-lg {
  border-radius: var(
    --form-control-size-lg-border-radius,
    var(--INTERNAL_form-control-size-lg-border-radius)
  );
  font-size: var(
    --form-control-size-lg-font-size,
    var(--INTERNAL_form-control-size-lg-font-size)
  );

  > input {
    padding: var(
      --form-control-size-lg-padding,
      var(--INTERNAL_form-control-size-lg-padding)
    );
    border-radius: var(
      --form-control-size-lg-border-radius,
      var(--INTERNAL_form-control-size-lg-border-radius)
    );
  }

  .prefix {
    padding: var(
      --form-control-size-lg-padding,
      var(--INTERNAL_form-control-size-lg-padding)
    );
  }

  .suffix {
    padding: var(
      --form-control-size-lg-padding,
      var(--INTERNAL_form-control-size-lg-padding)
    );
  }

  .clear-button {
    padding: var(
        --form-control-size-lg-padding,
        var(--INTERNAL_form-control-size-lg-padding)
      )
      var(
        --form-control-size-lg-padding,
        var(--INTERNAL_form-control-size-lg-padding)
      )
      var(
        --form-control-size-lg-padding,
        var(--INTERNAL_form-control-size-lg-padding)
      )
      0;
  }
}

%size-lg {
  @include size-lg;
}

.size-lg {
  @extend %size-lg;
}

// https://stackoverflow.com/questions/262158/disabled-input-text-color-on-ios
%disabled-base {
  background-color: var(--color-background-disabled);
  color: var(--color-font-disabled);
  -webkit-text-fill-color: var(--color-font-disabled);
  opacity: 1;

  &:hover {
    cursor: not-allowed;
  }
}

.text-input-wrapper {
  border: 1px solid
    var(--form-control-border-color, var(--INTERNAL_form-control-border-color));
  font-family: var(
    --form-control-font-family,
    var(--INTERNAL_form-control-font-family)
  );
  position: relative;
  background-color: var(
    --form-control-background-color,
    var(--INTERNAL_form-control-background-color)
  );

  &.size-sm {
    @extend %size-sm;
  }

  &.size-md {
    @extend %size-md;
  }

  &.size-lg {
    @extend %size-lg;
  }

  @media (min-width: $size-breakpoint-tablet) {
    &.size-sm-tablet {
      @include size-sm;
    }

    &.size-md-tablet {
      @include size-md;
    }

    &.size-lg-tablet {
      @include size-lg;
    }
  }

  @media (min-width: $size-breakpoint-desktop) {
    &.size-sm-desktop {
      @include size-sm;
    }

    &.size-md-desktop {
      @include size-md;
    }

    &.size-lg-desktop {
      @include size-lg;
    }
  }

  @media (min-width: $size-breakpoint-hd) {
    &.size-sm-hd {
      @include size-sm;
    }

    &.size-md-hd {
      @include size-md;
    }

    &.size-lg-hd {
      @include size-lg;
    }
  }

  // border and background is set on the text-input-wrapper
  > input {
    border: none;
    box-sizing: border-box;
    display: flex;
    transition-duration: 300ms;
    transition-property: border, background-color;
    transition-timing-function: cubic-bezier(0.2, 0.8, 0.4, 1);
    background-color: transparent;
    width: 100%;
    line-height: var(
      --form-control-line-height,
      var(--INTERNAL_form-control-line-height)
    );
    color: var(
      --form-control-font-color,
      var(--INTERNAL_form-control-font-color)
    );

    &::placeholder {
      opacity: 1;
      color: var(--color-font-placeholder);
    }

    &:focus {
      border: none;
      outline: none;
    }

    &:disabled {
      @extend %disabled-base;

      background-color: transparent;
    }
  }

  &.error {
    background-color: var(
      --form-control-background-color-error,
      var(--INTERNAL_form-control-background-color-error)
    );

    &:focus-within {
      background-color: var(
        --form-control-background-color,
        var(--INTERNAL_form-control-background-color)
      );
    }

    input {
      color: var(
        --form-control-font-color,
        var(--INTERNAL_form-control-input-color-error)
      );
    }

    input:focus {
      outline: none;
      background-color: transparent;
      color: var(
        --form-control-font-color,
        var(--INTERNAL_form-control-font-color)
      );
    }
  }

  //Necessary so that inset shadow that we use for border does not get covered by child elements.
  &:not(.error) {
    > * {
      &:focus,
      &.disabled {
        &:not(input) {
          box-shadow: inset 0 1px 0 0
              var(
                --form-control-box-shadow-focus,
                var(--INTERNAL_form-control-box-shadow-focus)
              ),
            inset 0 -1px 0 0 var(--form-control-border-color-focus, var(--INTERNAL_form-control-border-color-focus));
        }
      }
    }
  }

  &:focus-within {
    outline: none;
    border-color: var(--color-border-active);
    box-shadow: var(
      --form-control-box-shadow-focus,
      var(--INTERNAL_form-control-box-shadow-focus)
    );
  }

  &.disabled {
    @extend %disabled-base;
  }

  // Reset default button styles
  .clear-button {
    transition-duration: 0.2s;
    transition-property: color;
    border: 0;
    border-radius: 0;
    background: none;
    cursor: pointer;
    color: var(
      --form-control-icon-color,
      var(--INTERNAL_form-control-icon-color)
    );
    font-style: inherit;

    &:hover {
      color: var(
        --form-control-icon-hover-color,
        var(--INTERNAL_form-control-icon-hover-color)
      );
    }
  }
}

.text-input-label {
  margin-bottom: var(
    --form-control-label-margin,
    var(--INTERNAL_form-control-label-margin)
  );
}
